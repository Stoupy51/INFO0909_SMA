
# Imports
import json
import stouputils as stp
from config import *
from autogen_core import MessageContext, BaseAgent
import random

# Class
class AgentRandom(BaseAgent):
    def __init__(self) -> None:
        super().__init__(self.__class__.__name__)
        self.msg: Message = Message(origin=self.__class__.__name__)
        
    async def on_message_impl(self, message: Message, ctx: MessageContext) -> None:
        """ Receive a message and send randomly 1 if content is generated by AI, else 0 """
        stp.info(f"AgentRandom: Received message from {message.origin}")

        # Prepare data for the model
        content: str = str(message.content)
        vote: str = json.loads(message.data).get("request")

        if vote == "majoritaire":
            decision: int = random.choice([1, 0])
            self.msg.content = str(decision)
 
        elif vote == "borda":
            liste_candidats: list[str] = ["ai", "human"]
            random.shuffle(liste_candidats)
            nb_points: int = len(liste_candidats)
            text: str = ""
            for candidat in liste_candidats:
                text += candidat + " " + str(nb_points) + ","
                nb_points -= 1
            self.msg.content = text

        # Send back
        await self.send_message(self.msg, ctx.sender)    # type: ignore
        

